{"version":3,"sources":["Hooks/useFetch.js","components/detelle/HeroDetalle.js","components/detelle/MovieCard.js","components/detelle/Similares.js","components/detelle/DetalleScreen.js","components/inicio/HeaderInicio.js","components/inicio/MasTaquilleras.js","components/inicio/MejorCalificadas.js","Hooks/useFetchMejoresPeliculas.js","components/inicio/Listado.js","components/inicio/Recomendadas.js","Hooks/useFetchMovieRec.js","components/inicio/SeriesRecomendadas.js","Hooks/useFetchSerieRec.js","components/inicio/SectionRecomendadas.js","components/inicio/Inicio.js","components/inicio/InicioS.js","components/ui/Footer.js","components/ui/NavBar.js","components/MovieApp.js","index.js"],"names":["useFetch","url","urlPeticion","isMounted","useRef","useState","data","loading","error","popularState","setPopularState","useEffect","current","fetch","then","resp","json","catch","HeroDetalle","id","base_url","title","overview","backdrop_path","tagline","poster_path","original_title","release_date","className","alt","src","MovieCard","slice","to","Similares","results","map","movie","DetalleScreen","movieId","useParams","i","Math","floor","random","HeaderInicio","tipo","console","log","length","substring","name","MasTaquilleras","movieItem","result","vote_average","MejorCalificadas","mRecState","setMRecState","useFetchMejoresPeliculas","Listado","randomNum","Recomendadas","useFetchMovieRec","SeriesRecomendadas","useFetchSerieRec","number_of_seasons","SectionRecomendadas","Inicio","InicioS","Footer","href","rel","target","NavBar","exact","MovieApp","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a3056af.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useFetch = ( url ) => {\r\n    const baseUrl = 'https://api.themoviedb.org/3/';\r\n    const apiKey = 'api_key=3f565a6bf0f27ce7c6671cbb814d5b52';\r\n    const language = 'es-Mx'\r\n    const urlPeticion = `${baseUrl}${url}${apiKey}&language=${language}`;\r\n    const isMounted = useRef( true );\r\n    const [popularState, setPopularState] = useState( { data: null, loading: true, error:null } );\r\n\r\n    useEffect( () => {\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        setPopularState({ data: null, loading: true, error: null});\r\n        \r\n        fetch( urlPeticion )\r\n            .then( resp => resp.json())\r\n            .then( data => {\r\n                if( isMounted.current ){\r\n                    setPopularState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    })\r\n                }\r\n            })\r\n            .catch( () => {\r\n                setPopularState({\r\n                    data: null,\r\n                    loading: true,\r\n                    error: 'No se pudo cargar la info'\r\n                })\r\n            })\r\n    }, [urlPeticion]);\r\n\r\n    return popularState;   \r\n}\r\n","import React from 'react'\r\nimport { useFetch } from '../../Hooks/useFetch';\r\n\r\nexport const HeroDetalle = ( {id} ) => {\r\n    const {loading, data} = useFetch(`movie/${id}?`);\r\n    const base_url = 'https://image.tmdb.org/t/p/original';\r\n  \r\n    const { title, overview, backdrop_path, tagline, poster_path, original_title,release_date} = !!data && data;\r\n    \r\n\r\n    return (\r\n        <div className=\"h-screen flex text-center\">\r\n            {\r\n                loading\r\n                ?\r\n                    <div className=\"text-center\" >Cargando...</div>\r\n                :\r\n                <div className=\"relative flex w-full   grid  h-full md:h-screen bg-fixed text-center bg-black  items-center\">\r\n                    <img alt={title} src={base_url + backdrop_path} className=\"h-full w-full object-cover absolute inset-0 z-10 opacity-20\"/>\r\n                \r\n                    {/* <img src={base_url + results[0].poster_path} className=\"h-48 w-full object-cover md:w-48\"/> */}\r\n                    <div className=\"z-20 text-white absolute md:flex \">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-5 w-full items-center\">\r\n                            {/* <div className=\"col-start-2 col-span-4\"> */}\r\n                                <div className=\" col-1 md:col-start-2 \"  >\r\n                                    <img className=\"md:h-96 h-1/2 sm:h-1/4 sm:w-1/3  w-1/2 mx-auto md:mx-0  md:w-full\" src = { base_url + poster_path } alt={title}/>\r\n                                </div>\r\n                                <div className=\" col-1 md:col-start-3 md:col-span-3 mx-16 text-center\">\r\n                                    <h1 className=\"font-bold  text-4xl mb-5 uppercase\">{ title }</h1>\r\n                                    <p className=\"font-bold text-3x1 mb-5\">{tagline}</p>\r\n                                    <p className=\"text-justify mb-5\">{overview}</p>\r\n                                    <p className=\"mb-5\">Titulo original: {original_title}</p>\r\n                                    <p>Fecha de Lanzamiento: {release_date}</p>\r\n                                </div>\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const MovieCard = ({\r\n    title,\r\n    backdrop_path,\r\n    overview,\r\n    id\r\n}) => {\r\n    const base_url = 'https://image.tmdb.org/t/p/original';\r\n\r\n    return (\r\n        <div className=\"card h-full mx-5 max-w-xl my-7\">\r\n            <img className=\"rounded-t\" src={base_url + backdrop_path} alt={title}/>\r\n            <div className=\" relative bg-gray-100 h-72 rounded-b p-5\">\r\n                <div>\r\n                    <p className=\"text-2x1 font-bold\">{title}</p>\r\n                    <p className=\"my-2 text-justify \">{ overview.slice(0,280) + ' ...'}</p>\r\n                </div>\r\n                <div className=\"absolute bottom-3 left-3\">\r\n                    <Link to={`./${id}`}>\r\n                        <button className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-xl border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Más ...</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetch } from '../../Hooks/useFetch';\r\nimport { MovieCard } from './MovieCard';\r\n\r\nexport const Similares = ( { id } ) => {\r\n    const {loading, data} = useFetch(`movie/${id}/similar?`);\r\n    const { results } = !!data && data; \r\n    return (\r\n        <>  \r\n            <p className=\"text-xl font-bold ml-7 mt-10\">Peliculas Similares</p>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4\">\r\n                {\r\n                    loading\r\n                    ?(\r\n                        <div>Cargando...</div>\r\n                        )\r\n                        :(\r\n                            results.slice(0,4).map( movie => (\r\n                                <MovieCard\r\n                                key={movie.id}\r\n                                { ...movie }\r\n                                />\r\n                                ))\r\n                        )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { HeroDetalle } from './HeroDetalle';\r\nimport { Similares } from './Similares';\r\n\r\nexport const DetalleScreen = () => {\r\n\r\n    const {movieId} = useParams();\r\n    return (\r\n        <>\r\n            <HeroDetalle id={movieId}/>\r\n            <Similares id={movieId}/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetch } from '../../Hooks/useFetch';\r\n\r\nlet i = Math.floor(Math.random()*21);\r\nexport const HeaderInicio = ( {tipo} ) => {\r\n    const {loading, data} = useFetch(`${tipo}/popular?`);\r\n    const base_url = 'https://image.tmdb.org/t/p/original';\r\n    \r\n    const { results } = !!data && data;\r\n    if(!loading){\r\n        console.log(results);\r\n        if( results[i].overview.length > 300 ){\r\n             results[i].overview = results[i].overview.substring(0,300) + \"...\";\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n           {\r\n                loading \r\n                    ?\r\n                    (\r\n                        <div className=\"alert alert-info text-center h-screen w-full\">\r\n                            Loading...\r\n                        </div> \r\n                    )\r\n                    :\r\n                    (\r\n                        \r\n                        <>\r\n                        <div className=\"relative flex w-full  grid grid-cols-6 gap-4 h-screen bg-fixed text-center bg-black mx-auto\">\r\n                            <img alt={results[i].title} src={base_url + results[i].backdrop_path} className=\"h-full w-full object-cover absolute inset-0 z-10 opacity-30\"/>\r\n                        \r\n                            {/* <img src={base_url + results[0].poster_path} className=\"h-48 w-full object-cover md:w-48\"/> */}\r\n                            <div className=\"z-20 col-start-2 col-span-4 text-white absolute inset-x-0 bottom-0 mb-40\"> \r\n                                <h1 className=\"font-bold  text-4xl lg:my-10  my-2 uppercase\">{results[i].title || results[i].name}</h1>\r\n                                <p className=\"text-2x1 my-10\">{results[i].overview}</p>\r\n                                <Link to={`./movie/${results[i].id}`} >\r\n                                    <button className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\"> Ver detalles </button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                     \r\n                        </>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetch } from '../../Hooks/useFetch';\r\nconst base_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport const MasTaquilleras = ( { tipo } ) => {\r\n    const {loading, data} = useFetch(`discover/${tipo}?sort_by=revenue.desc&`);\r\n    \r\n    const { results } = !!data && data;\r\n     let movieItem;\r\n     if( !loading ){\r\n        movieItem = results.slice(1,11).map((result, i) => {\r\n            if( result.title && (result.title).length > 35){\r\n                result.title = (result.title).substring(0, 35);\r\n            }\r\n            return (\r\n                // <div key = {i}\r\n                // className=\"md:flex flex shadow-lg my-5 mx-10 md:max-w-2xl h-48\">\r\n                // <img className=\"h-full inline w-1/2 md:w-1/3  object-cover rounded-lg rounded-r-none pb-5/6 object-contain\" src={base_url + result.poster_path} alt={result.poster_path} />\r\n                //     <div className=\"w-1/2  inline  md:w-2/3 px-4 py-4 bg-white rounded-lg rounded-l-none\">        \r\n                //         <p className=\"font-bold text-lg md:text-2x1  align-middle md:py-3 md:ml-10\">{result.title || result.name}</p>\r\n                //         <p className=\"font-bold md:ml-10\">{result.release_date || result.first_air_date}</p>     \r\n                //         <Link to={`./movie/${result.id}`}>\r\n                //             <button className=\"px-4 py-1 text-sm text-purple-600 md:ml-10 my-3 font-semibold rounded-xl border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Más ...</button>\r\n                //         </Link>\r\n                //     </div>\r\n                // </div>\r\n\r\n                <>\r\n                <div key = {i}\r\n                    className=\"md:flex flex  mb-3 md:mx-10 mx-3 my-7 md:max-w-2xl h-24\">\r\n                       <img className=\"h-full inline w-1/4 md:w-1/4   object-cover object-contain\" src={base_url + result.poster_path} alt={ result.title || result.name}/>\r\n                        <div className=\"w-2/3  inline  md:w-2/3 px-4 md:py-4 \">\r\n                            <p className=\"sm:font-bold md:text-lg md:text-2x1  align-middle md:py-1 md:ml-10\">{result.title || result.name}</p>\r\n                            {/* <p className=\"font-bold pt-3  md:pb-1 md:ml-10\">Calificación. {result.vote_average}</p>\r\n                            <p className=\"font-bold md:ml-10\">{result.release_date  || result.first_air_date}</p>      */}\r\n                             <p className=\"font-bold pt-1  md:pb-1 md:ml-10\">{result.vote_average}</p>\r\n                            \r\n\r\n                        </div>\r\n                        <div className=\"object-center text-center align-center align-middle\">\r\n                            <Link to={`./movie/${result.id}`}>\r\n                                <button className=\"text-xl aling-middle px-2 mx-2 my-8 text-purple-600 font-semibold rounded-full border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">+</button>\r\n                            </Link>\r\n                        </div>\r\n                </div>\r\n                <hr className=\"bg-gray-100 mx-5 \"/>\r\n                </>\r\n            )\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center text-2x1 font-bold\">Más Taquilleras</h1>\r\n            {\r\n                loading \r\n                    ?\r\n                    (\r\n                        <div className=\"alert alert-info text-center\">\r\n                            Loading...\r\n                        </div> \r\n                    )\r\n                    :\r\n                    (\r\n                        <div className=\"bg-white m-10 py-5 rounded-lg\">\r\n                            <div>\r\n                                {movieItem}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetchMejoresPeliculas } from '../../Hooks/useFetchMejoresPeliculas';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original';\r\nexport const MejorCalificadas = ( { tipo } ) => {\r\n    const {loading, data} = useFetchMejoresPeliculas(`${tipo}/top_rated`);\r\n    \r\n    const { results } = !!data && data;\r\n     let movieItem;\r\n     if( !loading ){\r\n        movieItem = results.slice(1,11).map((result, i) => {\r\n\r\n            if( result.title && (result.title).length > 30  ){\r\n                console.log(result.title.length)\r\n                result.title = (result.title).substring(0, 30);\r\n            }\r\n            return (\r\n                <>\r\n                <div key = {i}\r\n                    className=\"md:flex flex  mb-3 md:mx-10 mx-3 my-7 md:max-w-2xl h-24\">\r\n                       <img className=\"h-full inline w-1/4 md:w-1/4   object-cover object-contain\" src={base_url + result.poster_path} alt=\"bag\" />\r\n                        <div className=\"w-2/3  inline  md:w-2/3 px-4 md:py-4 \">\r\n                            <p className=\"sm:font-bold md:text-lg md:text-2x1  align-middle md:py-1 md:ml-10\">{result.title || result.name}</p>\r\n                            {/* <p className=\"font-bold pt-3  md:pb-1 md:ml-10\">Calificación. {result.vote_average}</p>\r\n                            <p className=\"font-bold md:ml-10\">{result.release_date  || result.first_air_date}</p>      */}\r\n                             <p className=\"font-bold pt-1  md:pb-1 md:ml-10\">{result.vote_average}</p>\r\n                            \r\n\r\n                        </div>\r\n                        <div className=\"object-center text-center align-center align-middle\">\r\n                            <Link to={`./movie/${result.id}`}>\r\n                                <button className=\"text-xl aling-middle px-2 mx-2 my-8 text-purple-600 font-semibold rounded-full border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">+</button>\r\n                            </Link>\r\n                        </div>\r\n                </div>\r\n                <hr className=\"bg-gray-100 mx-5 \"/>\r\n                </>\r\n            )\r\n        });\r\n     }\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center text-2x1 font-bold\">Mejores Peliculas</h1>\r\n            {\r\n                loading \r\n                    ?\r\n                    (\r\n                        <div className=\"alert alert-info text-center\">\r\n                            Loading...\r\n                        </div> \r\n                    )\r\n                    :\r\n                    (\r\n                        <div className=\"bg-white m-10 py-5 rounded-lg\">\r\n                            <div>\r\n                                {movieItem}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nexport const useFetchMejoresPeliculas = ( url ) => {\r\n    const baseUrl = 'https://api.themoviedb.org/3/';\r\n    const apiKey = '?api_key=3f565a6bf0f27ce7c6671cbb814d5b52';\r\n    const language = 'es-Mx'\r\n    const urlPeticion = `${baseUrl}${url}${apiKey}&language=${language}`;\r\n    const isMounted = useRef( true );\r\n    \r\n    const [mRecState, setMRecState] = useState( { data: null, loading: true, error:null } );\r\n\r\n    useEffect( () => {\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        setMRecState({ data: null, loading: true, error: null});\r\n        \r\n        fetch( urlPeticion )\r\n            .then( resp => resp.json())\r\n            .then( data => {\r\n                if( isMounted.current ){\r\n                    setMRecState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    })\r\n                }\r\n            })\r\n            .catch( () => {\r\n                setMRecState({\r\n                    data: null,\r\n                    loading: true,\r\n                    error: 'No se pudo cargar la info'\r\n                })\r\n            })\r\n    }, [urlPeticion]);\r\n    return mRecState; \r\n}\r\n","import React from 'react'\r\nimport { MasTaquilleras } from './MasTaquilleras';\r\nimport { MejorCalificadas } from './MejorCalificadas';\r\n\r\nexport const Listado = ( { tipo }) => {\r\n    return (\r\n        <div className=\"py-10 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500  \">\r\n            <div className=\"text-center w-full h-10 mt-10 mb-5 \" >\r\n                <p className=\"font-bold text-4xl text-gray text-center\">Listado de Peliculas</p>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2\">\r\n                <MejorCalificadas tipo = { tipo } />\r\n                <MasTaquilleras tipo = { tipo }/>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetchMovieRec } from '../../Hooks/useFetchMovieRec';\r\nconst code = './public/code.jpg';\r\nlet randomNum = Math.random() * (1000 - 1) + 1;\r\nrandomNum = Math.floor(randomNum);\r\nconst base_url = 'https://image.tmdb.org/t/p/original';\r\n\r\n\r\nexport const Recomendadas = () => {\r\n        const {loading, data} = useFetchMovieRec(`movie/${randomNum}`);\r\n        \r\n        const { title, overview, backdrop_path, id } = !!data && data;\r\n    return (\r\n        <div className=\"m-auto px-4 py-8 max-w-xl\">\r\n            <div className=\"rounded-b-xl shadow-xl\" >\r\n            {\r\n                loading\r\n                ?\r\n                (\r\n                    <div>\r\n                        Loading\r\n                    </div>\r\n                \r\n                )\r\n                :\r\n                (\r\n                    <>\r\n                    <div className=\"\">\r\n                        <img className=\"object-fill w-full h-80 rounded-t\" src={ backdrop_path ? base_url + backdrop_path : code} alt={ title }/>\r\n                    </div>\r\n                    <div className=\"px-4 py-1 h-72 bg-gray-100 rounded-b shadow-xl\">\r\n                        <h2 className=\"font-bold text-2xl text-gray-800 my-6 text-center\">{title}</h2>\r\n                            <p className=\"sm:text-sm text-xs text-justify text-gray-700 h-24 px-2 mr-1 my-3 overflow-ellipsis overflow-hidden\">\r\n                                { overview || \"No se pudo cargar la información\" }\r\n                            </p>\r\n                            <Link to={`./movie/${id}`}>\r\n                                <button className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-xl border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Más ...</button>\r\n                            </Link>\r\n                    </div>\r\n                    </>\r\n                )\r\n\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n    }\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useFetchMovieRec = ( url ) => {\r\n    const baseUrl = 'https://api.themoviedb.org/3/';\r\n    const apiKey = '?api_key=3f565a6bf0f27ce7c6671cbb814d5b52';\r\n    const language = 'es-Mx'\r\n    const urlPeticion = `${baseUrl}${url}${apiKey}&language=${language}`;\r\n    const isMounted = useRef( true );\r\n    console.log(urlPeticion);\r\n    const [mRecState, setMRecState] = useState( { data: null, loading: true, error:null } );\r\n\r\n    useEffect( () => {\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        setMRecState({ data: null, loading: true, error: null});\r\n        \r\n        fetch( urlPeticion )\r\n            .then( resp => resp.json())\r\n            .then( data => {\r\n                if( isMounted.current ){\r\n                    setMRecState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    })\r\n                }\r\n            })\r\n            .catch( () => {\r\n                setMRecState({\r\n                    data: null,\r\n                    loading: true,\r\n                    error: 'No se pudo cargar la info'\r\n                })\r\n            })\r\n    }, [urlPeticion]);\r\n    return mRecState;   \r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetchSerieRec } from '../../Hooks/useFetchSerieRec';\r\n\r\nlet randomNum = Math.random() * (1000 - 1) + 1;\r\nrandomNum = Math.floor(randomNum);\r\nconst base_url = 'https://image.tmdb.org/t/p/original';\r\nconst code = '../../../public/code.jpg';\r\n\r\nexport const SeriesRecomendadas = () => {\r\n    const {loading, data} = useFetchSerieRec(`tv/${randomNum}`);\r\n    \r\n    const {overview, number_of_seasons, name, backdrop_path, id } = !!data && data;\r\n   return (\r\n        <div className=\"m-auto px-4 py-8 max-w-xl\">\r\n            <div className=\"rounded-b-xl shadow-xl\" >\r\n                {\r\n                    loading\r\n                    ?\r\n                    (\r\n                        <div>\r\n                            Loading\r\n                        </div>\r\n                    \r\n                    )\r\n                    :\r\n                    (\r\n                        <>\r\n                        <div className=\"\">\r\n                            <img className=\"object-fill w-full h-80 rounded-t-xl\" src={ backdrop_path ? base_url + backdrop_path : code } alt={name}/>\r\n                        </div>\r\n                        <div className=\"px-4 py-1 h-72 bg-gray-100 rounded-b shadow-xl\">\r\n                            <h2 className=\"font-bold text-2xl text-gray-800 my-6 text-center\">{name}</h2>\r\n                                <p className=\"sm:text-sm text-xs text-justify text-gray-700 h-24 px-2 mr-1 my-3 overflow-ellipsis overflow-hidden\">\r\n                                    { overview || \"No se pudo cargar la información\" }\r\n                                </p>\r\n                                <p className=\"sm:text-sm text-xs text-justify text-gray-700 px-2 mr-1 my-3\">\r\n                                    { number_of_seasons + \" Temporada(s)\" || \"No se pudo cargar la información\" }\r\n                                </p>\r\n                                <Link to={`./movie/${id}`}>\r\n                                    <button className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-xl border border-purple-200 bg-white hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Más ...</button>\r\n                                </Link>\r\n                        </div>\r\n                        \r\n                        </>\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n   )\r\n}\r\n","import{ useEffect, useRef, useState } from 'react'\r\n\r\nexport const useFetchSerieRec = (url) => {\r\n    const baseUrl = 'https://api.themoviedb.org/3/';\r\n    const apiKey = '?api_key=3f565a6bf0f27ce7c6671cbb814d5b52';\r\n    const language = 'es-Mx'\r\n    const urlPeticion = `${baseUrl}${url}${apiKey}&language=${language}`;\r\n    const isMounted = useRef( true );\r\n    \r\n    const [mRecState, setMRecState] = useState( { data: null, loading: true, error:null } );\r\n\r\n    useEffect( () => {\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        setMRecState({ data: null, loading: true, error: null});\r\n        \r\n        fetch( urlPeticion )\r\n            .then( resp => resp.json())\r\n            .then( data => {\r\n                if( isMounted.current ){\r\n                    setMRecState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    })\r\n                }\r\n            })\r\n            .catch( () => {\r\n                setMRecState({\r\n                    data: null,\r\n                    loading: true,\r\n                    error: 'No se pudo cargar la info'\r\n                });\r\n            })\r\n    }, [urlPeticion]);\r\n    return mRecState; \r\n}\r\n","import React from 'react'\r\nimport { Recomendadas } from './Recomendadas'\r\nimport { SeriesRecomendadas } from './SeriesRecomendadas'\r\n\r\nexport const SectionRecomendadas = ( ) => {\r\n    return (\r\n        <div className=\"bg-gradient-to-r from-green-400 to-blue-500\">\r\n            <div className=\"text-center w-full h-10 pt-10 mb-10\" >\r\n                <p className=\"font-bold text-4xl text-blue text-center\"> ¿Qué ver hoy?</p>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2\">\r\n                <Recomendadas />\r\n                <SeriesRecomendadas/>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { HeaderInicio } from './HeaderInicio';\r\nimport { Listado } from './Listado';\r\nimport { SectionRecomendadas } from './SectionRecomendadas';\r\n\r\n\r\nexport const Inicio = () => {\r\n    const tipo = \"movie\";\r\n    return (\r\n        <div>\r\n            <HeaderInicio tipo = {tipo}/>\r\n            <SectionRecomendadas tipo = {tipo} />\r\n            <Listado tipo = {tipo} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { HeaderInicio } from './HeaderInicio';\r\nimport { Listado } from './Listado';\r\nimport { SectionRecomendadas } from './SectionRecomendadas';\r\n\r\n\r\nexport const InicioS = () => {\r\n    const tipo = \"tv\";\r\n    return (\r\n        <div>\r\n            <HeaderInicio tipo = {tipo}/>\r\n            <SectionRecomendadas tipo = {tipo} />\r\n            <Listado tipo = {tipo} />\r\n          \r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"bg-black w-full py-5 justify-evenly content-center text-white text-center\">\r\n           <p>\r\n                Sitio creado por Alfredo Macías como un proyecto personal sin fines de lucro para ser parte del portafolio.\r\n            </p>\r\n            <p>\r\n                  Información obtenida de:\r\n                  <a href=\"https://themoviedb.org\" rel=\"noreferrer\" target=\"_blank\"className=\"text-blue\">\r\n                      <img\r\n                        className=\"w-1/3  \" \r\n                        src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\" alt=\"TheMoviedb.org\" />\r\n                </a> \r\n            </p>\r\n            <p>\r\n               Copyright © 2021\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../../index.css';\r\nexport const NavBar = () => {\r\n    return (\r\n        <div className=\"flex h-10 bg-gray-700 justify-center flex-wrap content-center z-50 py-50 \">\r\n            <NavLink exact to=\"/\" className=\"text-white text-xl mx-12\">Peliculas</NavLink>\r\n            <NavLink exact to=\"/series\" className=\"text-white text-xl mx-12\">Series</NavLink>\r\n            {/* <NavLink exact to=\"/series\" className=\"text-white text-xl mx-12\">About</NavLink>\r\n            <NavLink exact to=\"/series\" className=\"text-white text-xl mx-12\">Buscar</NavLink> */}\r\n            {/* <NavLink exact to=\"/actors\" className=\"text-white\">Actrices & Actores</NavLink>\r\n            <NavLink exact to=\"/buscar\" className=\"text-white\">Buscar</NavLink> */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport { DetalleScreen } from './detelle/DetalleScreen';\r\nimport { Inicio } from './inicio/Inicio';\r\nimport { InicioS } from './inicio/InicioS';\r\nimport { Footer } from './ui/Footer';\r\nimport { NavBar } from './ui/NavBar';\r\n\r\n\r\nexport const MovieApp = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <NavBar/>\r\n\r\n                {/* A <Switch> looks through its children <Route>s and\r\n                    renders the first one that matches the current URL. */}\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ Inicio }/>\r\n                    <Route exact path=\"/series\" component={InicioS}/>\r\n                    <Route exact path=\"/movie/:movieId\" component={DetalleScreen}/>\r\n                </Switch>\r\n                <Footer/>\r\n            </div>\r\n        </Router>\r\n    )   \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MovieApp } from './components/MovieApp';\n// import { Footer } from './components/Footer';\nimport './index.css';\n// import { Inicio } from './components/Inicio';\n\nReactDOM.render(\n  <MovieApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}